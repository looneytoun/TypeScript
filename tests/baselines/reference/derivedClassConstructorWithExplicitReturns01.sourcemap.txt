===================================================================
JsFile: derivedClassConstructorWithExplicitReturns01.js
mapUrl: derivedClassConstructorWithExplicitReturns01.js.map
sourceRoot: 
sources: derivedClassConstructorWithExplicitReturns01.ts
===================================================================
-------------------------------------------------------------------
emittedFile:tests/cases/compiler/derivedClassConstructorWithExplicitReturns01.js
sourceFile:derivedClassConstructorWithExplicitReturns01.ts
-------------------------------------------------------------------
>>>var __names = (this && this.__names) || (function() {
>>>    var name = Object.defineProperty ? (function(proto, name) {
>>>        Object.defineProperty(proto[name], 'name', { 
>>>            value: name, configurable: true, writable: false, enumerable: false
>>>        });
>>>    }) : (function(proto, name) {
>>>        proto[name].name = name;
>>>    });
>>>    return function (proto, keys) {
>>>        for (var i = keys.length - 1; i >= 0; i--) {
>>>            name(proto, keys[i])
>>>        }
>>>    };
>>>})();
>>>var __extends = (this && this.__extends) || (function () {
>>>    var extendStatics = Object.setPrototypeOf ||
>>>        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
>>>        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
>>>    return function (d, b) {
>>>        extendStatics(d, b);
>>>        function __() { this.constructor = d; }
>>>        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
>>>    };
>>>})();
>>>var C = (function () {
1 >
2 >^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
1 >Emitted(25, 1) Source(1, 1) + SourceIndex(0)
---
>>>    function C(value) {
1->^^^^
2 >    ^^^^^^^^^^^
3 >               ^^^^^
4 >                    ^^^^^->
1->class C {
  >    cProp = 10;
  >
  >    foo() { return "this never gets used."; }
  >
  >    
2 >    constructor(
3 >               value: number
1->Emitted(26, 5) Source(6, 5) + SourceIndex(0)
2 >Emitted(26, 16) Source(6, 17) + SourceIndex(0)
3 >Emitted(26, 21) Source(6, 30) + SourceIndex(0)
---
>>>        this.cProp = 10;
1->^^^^^^^^
2 >        ^^^^^^^^^^
3 >                  ^^^
4 >                     ^^
5 >                       ^
1->
2 >        cProp
3 >                   = 
4 >                     10
5 >                       ;
1->Emitted(27, 9) Source(2, 5) + SourceIndex(0)
2 >Emitted(27, 19) Source(2, 10) + SourceIndex(0)
3 >Emitted(27, 22) Source(2, 13) + SourceIndex(0)
4 >Emitted(27, 24) Source(2, 15) + SourceIndex(0)
5 >Emitted(27, 25) Source(2, 16) + SourceIndex(0)
---
>>>        return {
1 >^^^^^^^^
2 >        ^^^^^^
3 >              ^
4 >               ^^^^^^^^^^^->
1 >
  >
  >    foo() { return "this never gets used."; }
  >
  >    constructor(value: number) {
  >        
2 >        return
3 >               
1 >Emitted(28, 9) Source(7, 9) + SourceIndex(0)
2 >Emitted(28, 15) Source(7, 15) + SourceIndex(0)
3 >Emitted(28, 16) Source(7, 16) + SourceIndex(0)
---
>>>            cProp: value,
1->^^^^^^^^^^^^
2 >            ^^^^^
3 >                 ^^
4 >                   ^^^^^
5 >                        ^^^^^^^->
1->{
  >            
2 >            cProp
3 >                 : 
4 >                   value
1->Emitted(29, 13) Source(8, 13) + SourceIndex(0)
2 >Emitted(29, 18) Source(8, 18) + SourceIndex(0)
3 >Emitted(29, 20) Source(8, 20) + SourceIndex(0)
4 >Emitted(29, 25) Source(8, 25) + SourceIndex(0)
---
>>>            foo: function () {
1->^^^^^^^^^^^^
2 >            ^^^
3 >               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->,
  >            
2 >            foo
1->Emitted(30, 13) Source(9, 13) + SourceIndex(0)
2 >Emitted(30, 16) Source(9, 16) + SourceIndex(0)
---
>>>                return "well this looks kinda C-ish.";
1->^^^^^^^^^^^^^^^^
2 >                ^^^^^^
3 >                      ^
4 >                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 >                                                     ^
1->() {
  >                
2 >                return
3 >                       
4 >                       "well this looks kinda C-ish."
5 >                                                     ;
1->Emitted(31, 17) Source(10, 17) + SourceIndex(0)
2 >Emitted(31, 23) Source(10, 23) + SourceIndex(0)
3 >Emitted(31, 24) Source(10, 24) + SourceIndex(0)
4 >Emitted(31, 54) Source(10, 54) + SourceIndex(0)
5 >Emitted(31, 55) Source(10, 55) + SourceIndex(0)
---
>>>            }
1 >^^^^^^^^^^^^
2 >            ^
1 >
  >            
2 >            }
1 >Emitted(32, 13) Source(11, 13) + SourceIndex(0)
2 >Emitted(32, 14) Source(11, 14) + SourceIndex(0)
---
>>>        };
1 >^^^^^^^^^
2 >         ^
1 >
  >        }
2 >         
1 >Emitted(33, 10) Source(12, 10) + SourceIndex(0)
2 >Emitted(33, 11) Source(12, 10) + SourceIndex(0)
---
>>>    }
1 >^^^^
2 >    ^
3 >     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
  >    
2 >    }
1 >Emitted(34, 5) Source(13, 5) + SourceIndex(0)
2 >Emitted(34, 6) Source(13, 6) + SourceIndex(0)
---
>>>    C.prototype.foo = function () { return "this never gets used."; };
1->^^^^
2 >    ^^^^^^^^^^^^^^^
3 >                   ^^^
4 >                      ^^^^^^^^^^^^^^
5 >                                    ^^^^^^
6 >                                          ^
7 >                                           ^^^^^^^^^^^^^^^^^^^^^^^
8 >                                                                  ^
9 >                                                                   ^
10>                                                                    ^
1->
2 >    foo
3 >                   
4 >                      foo() { 
5 >                                    return
6 >                                           
7 >                                           "this never gets used."
8 >                                                                  ;
9 >                                                                    
10>                                                                    }
1->Emitted(35, 5) Source(4, 5) + SourceIndex(0)
2 >Emitted(35, 20) Source(4, 8) + SourceIndex(0)
3 >Emitted(35, 23) Source(4, 5) + SourceIndex(0)
4 >Emitted(35, 37) Source(4, 13) + SourceIndex(0)
5 >Emitted(35, 43) Source(4, 19) + SourceIndex(0)
6 >Emitted(35, 44) Source(4, 20) + SourceIndex(0)
7 >Emitted(35, 67) Source(4, 43) + SourceIndex(0)
8 >Emitted(35, 68) Source(4, 44) + SourceIndex(0)
9 >Emitted(35, 69) Source(4, 45) + SourceIndex(0)
10>Emitted(35, 70) Source(4, 46) + SourceIndex(0)
---
>>>    __names(C.prototype, ["foo"]);
>>>    return C;
1 >^^^^
2 >    ^^^^^^^^
1 >
  >
  >    constructor(value: number) {
  >        return {
  >            cProp: value,
  >            foo() {
  >                return "well this looks kinda C-ish.";
  >            }
  >        }
  >    }
  >
2 >    }
1 >Emitted(37, 5) Source(14, 1) + SourceIndex(0)
2 >Emitted(37, 13) Source(14, 2) + SourceIndex(0)
---
>>>}());
1 >
2 >^
3 > 
4 > ^^^^
5 >     ^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
2 >}
3 > 
4 > class C {
  >     cProp = 10;
  > 
  >     foo() { return "this never gets used."; }
  > 
  >     constructor(value: number) {
  >         return {
  >             cProp: value,
  >             foo() {
  >                 return "well this looks kinda C-ish.";
  >             }
  >         }
  >     }
  > }
1 >Emitted(38, 1) Source(14, 1) + SourceIndex(0)
2 >Emitted(38, 2) Source(14, 2) + SourceIndex(0)
3 >Emitted(38, 2) Source(1, 1) + SourceIndex(0)
4 >Emitted(38, 6) Source(14, 2) + SourceIndex(0)
---
>>>var D = (function (_super) {
1->
2 >^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->
  >
  >
1->Emitted(39, 1) Source(16, 1) + SourceIndex(0)
---
>>>    __extends(D, _super);
1->^^^^
2 >    ^^^^^^^^^^^^^^^^^^^^^
1->class D extends 
2 >    C
1->Emitted(40, 5) Source(16, 17) + SourceIndex(0)
2 >Emitted(40, 26) Source(16, 18) + SourceIndex(0)
---
>>>    function D(a) {
1 >^^^^
2 >    ^^^^^^^^^^^
3 >               ^
4 >                ^^^^^^^^^^^^^^^^^^^^^^^->
1 > {
  >    dProp = () => this;
  >
  >    
2 >    constructor(
3 >               a = 100
1 >Emitted(41, 5) Source(19, 5) + SourceIndex(0)
2 >Emitted(41, 16) Source(19, 17) + SourceIndex(0)
3 >Emitted(41, 17) Source(19, 24) + SourceIndex(0)
---
>>>        if (a === void 0) { a = 100; }
1->^^^^^^^^
2 >        ^^^^^^^^^^^^^^^^^^
3 >                          ^^
4 >                            ^^^^^^^
5 >                                   ^^^^^^^^^^^^^^^->
1->
2 >        
3 >                          
4 >                            a = 100
1->Emitted(42, 9) Source(19, 17) + SourceIndex(0)
2 >Emitted(42, 27) Source(19, 17) + SourceIndex(0)
3 >Emitted(42, 29) Source(19, 17) + SourceIndex(0)
4 >Emitted(42, 36) Source(19, 24) + SourceIndex(0)
---
>>>        var _this = _super.call(this, a) || this;
1->^^^^^^^^
2 >        ^^^^^^^^^^^^
3 >                    ^^^^^^^^^^^^^^^^^^
4 >                                      ^
5 >                                       ^
6 >                                        ^^^^^^^^^
7 >                                                 ^^^^->
1->
2 >        constructor(a = 100) {
  >                
3 >                    super(
4 >                                      a
5 >                                       )
6 >                                        ;
  >                                        
  >                                                if (Math.random() < 0.5) {
  >                                                    "You win!"
  >                                                    return {
  >                                                        cProp: 1,
  >                                                        dProp: () => this,
  >                                                        foo() { return "You win!!!!!" }
  >                                                    };
  >                                                }
  >                                                else
  >                                                    return null;
  >                                            }
1->Emitted(43, 9) Source(19, 5) + SourceIndex(0)
2 >Emitted(43, 21) Source(20, 9) + SourceIndex(0)
3 >Emitted(43, 39) Source(20, 15) + SourceIndex(0)
4 >Emitted(43, 40) Source(20, 16) + SourceIndex(0)
5 >Emitted(43, 41) Source(20, 17) + SourceIndex(0)
6 >Emitted(43, 50) Source(32, 6) + SourceIndex(0)
---
>>>        _this.dProp = function () { return _this; };
1->^^^^^^^^
2 >        ^^^^^^^^^^^
3 >                   ^^^
4 >                      ^^^^^^^^^^^^^^
5 >                                    ^^^^^^^
6 >                                           ^^^^^
7 >                                                ^^
8 >                                                  ^
9 >                                                   ^
1->
2 >        dProp
3 >                    = 
4 >                      () => 
5 >                                    
6 >                                           this
7 >                                                
8 >                                                  this
9 >                                                   ;
1->Emitted(44, 9) Source(17, 5) + SourceIndex(0)
2 >Emitted(44, 20) Source(17, 10) + SourceIndex(0)
3 >Emitted(44, 23) Source(17, 13) + SourceIndex(0)
4 >Emitted(44, 37) Source(17, 19) + SourceIndex(0)
5 >Emitted(44, 44) Source(17, 19) + SourceIndex(0)
6 >Emitted(44, 49) Source(17, 23) + SourceIndex(0)
7 >Emitted(44, 51) Source(17, 19) + SourceIndex(0)
8 >Emitted(44, 52) Source(17, 23) + SourceIndex(0)
9 >Emitted(44, 53) Source(17, 24) + SourceIndex(0)
---
>>>        if (Math.random() < 0.5) {
1 >^^^^^^^^
2 >        ^^
3 >          ^
4 >           ^
5 >            ^^^^
6 >                ^
7 >                 ^^^^^^
8 >                       ^^
9 >                         ^^^
10>                            ^^^
11>                               ^
12>                                ^
13>                                 ^
1 >
  >
  >    constructor(a = 100) {
  >        super(a);
  >
  >        
2 >        if
3 >           
4 >           (
5 >            Math
6 >                .
7 >                 random
8 >                       ()
9 >                          < 
10>                            0.5
11>                               )
12>                                 
13>                                 {
1 >Emitted(45, 9) Source(22, 9) + SourceIndex(0)
2 >Emitted(45, 11) Source(22, 11) + SourceIndex(0)
3 >Emitted(45, 12) Source(22, 12) + SourceIndex(0)
4 >Emitted(45, 13) Source(22, 13) + SourceIndex(0)
5 >Emitted(45, 17) Source(22, 17) + SourceIndex(0)
6 >Emitted(45, 18) Source(22, 18) + SourceIndex(0)
7 >Emitted(45, 24) Source(22, 24) + SourceIndex(0)
8 >Emitted(45, 26) Source(22, 26) + SourceIndex(0)
9 >Emitted(45, 29) Source(22, 29) + SourceIndex(0)
10>Emitted(45, 32) Source(22, 32) + SourceIndex(0)
11>Emitted(45, 33) Source(22, 33) + SourceIndex(0)
12>Emitted(45, 34) Source(22, 34) + SourceIndex(0)
13>Emitted(45, 35) Source(22, 35) + SourceIndex(0)
---
>>>            "You win!";
1 >^^^^^^^^^^^^
2 >            ^^^^^^^^^^
3 >                      ^
1 >
  >            
2 >            "You win!"
3 >                      
1 >Emitted(46, 13) Source(23, 13) + SourceIndex(0)
2 >Emitted(46, 23) Source(23, 23) + SourceIndex(0)
3 >Emitted(46, 24) Source(23, 23) + SourceIndex(0)
---
>>>            return {
1 >^^^^^^^^^^^^
2 >            ^^^^^^
3 >                  ^
4 >                   ^^^^^^^->
1 >
  >            
2 >            return
3 >                   
1 >Emitted(47, 13) Source(24, 13) + SourceIndex(0)
2 >Emitted(47, 19) Source(24, 19) + SourceIndex(0)
3 >Emitted(47, 20) Source(24, 20) + SourceIndex(0)
---
>>>                cProp: 1,
1->^^^^^^^^^^^^^^^^
2 >                ^^^^^
3 >                     ^^
4 >                       ^
5 >                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1->{
  >                
2 >                cProp
3 >                     : 
4 >                       1
1->Emitted(48, 17) Source(25, 17) + SourceIndex(0)
2 >Emitted(48, 22) Source(25, 22) + SourceIndex(0)
3 >Emitted(48, 24) Source(25, 24) + SourceIndex(0)
4 >Emitted(48, 25) Source(25, 25) + SourceIndex(0)
---
>>>                dProp: function () { return _this; },
1->^^^^^^^^^^^^^^^^
2 >                ^^^^^
3 >                     ^^
4 >                       ^^^^^^^^^^^^^^
5 >                                     ^^^^^^^
6 >                                            ^^^^^
7 >                                                 ^^
8 >                                                   ^
9 >                                                    ^^^^^^^^->
1->,
  >                
2 >                dProp
3 >                     : 
4 >                       () => 
5 >                                     
6 >                                            this
7 >                                                 
8 >                                                   this
1->Emitted(49, 17) Source(26, 17) + SourceIndex(0)
2 >Emitted(49, 22) Source(26, 22) + SourceIndex(0)
3 >Emitted(49, 24) Source(26, 24) + SourceIndex(0)
4 >Emitted(49, 38) Source(26, 30) + SourceIndex(0)
5 >Emitted(49, 45) Source(26, 30) + SourceIndex(0)
6 >Emitted(49, 50) Source(26, 34) + SourceIndex(0)
7 >Emitted(49, 52) Source(26, 30) + SourceIndex(0)
8 >Emitted(49, 53) Source(26, 34) + SourceIndex(0)
---
>>>                foo: function () { return "You win!!!!!"; }
1->^^^^^^^^^^^^^^^^
2 >                ^^^
3 >                   ^^^^^^^^^^^^^^^^
4 >                                   ^^^^^^
5 >                                         ^
6 >                                          ^^^^^^^^^^^^^^
7 >                                                        ^
8 >                                                         ^
9 >                                                          ^
1->,
  >                
2 >                foo
3 >                   () { 
4 >                                   return
5 >                                          
6 >                                          "You win!!!!!"
7 >                                                        
8 >                                                          
9 >                                                          }
1->Emitted(50, 17) Source(27, 17) + SourceIndex(0)
2 >Emitted(50, 20) Source(27, 20) + SourceIndex(0)
3 >Emitted(50, 36) Source(27, 25) + SourceIndex(0)
4 >Emitted(50, 42) Source(27, 31) + SourceIndex(0)
5 >Emitted(50, 43) Source(27, 32) + SourceIndex(0)
6 >Emitted(50, 57) Source(27, 46) + SourceIndex(0)
7 >Emitted(50, 58) Source(27, 46) + SourceIndex(0)
8 >Emitted(50, 59) Source(27, 47) + SourceIndex(0)
9 >Emitted(50, 60) Source(27, 48) + SourceIndex(0)
---
>>>            };
1 >^^^^^^^^^^^^^
2 >             ^
1 >
  >            }
2 >             ;
1 >Emitted(51, 14) Source(28, 14) + SourceIndex(0)
2 >Emitted(51, 15) Source(28, 15) + SourceIndex(0)
---
>>>        }
1 >^^^^^^^^
2 >        ^
3 >         ^^^^->
1 >
  >        
2 >        }
1 >Emitted(52, 9) Source(29, 9) + SourceIndex(0)
2 >Emitted(52, 10) Source(29, 10) + SourceIndex(0)
---
>>>        else
1->^^^^^^^^
2 >        ^^^^
3 >            ^^^^^^^^^^^^^->
1->
  >        
2 >        else
1->Emitted(53, 9) Source(30, 9) + SourceIndex(0)
2 >Emitted(53, 13) Source(30, 13) + SourceIndex(0)
---
>>>            return null;
1->^^^^^^^^^^^^
2 >            ^^^^^^
3 >                  ^
4 >                   ^^^^
5 >                       ^
1->
  >            
2 >            return
3 >                   
4 >                   null
5 >                       ;
1->Emitted(54, 13) Source(31, 13) + SourceIndex(0)
2 >Emitted(54, 19) Source(31, 19) + SourceIndex(0)
3 >Emitted(54, 20) Source(31, 20) + SourceIndex(0)
4 >Emitted(54, 24) Source(31, 24) + SourceIndex(0)
5 >Emitted(54, 25) Source(31, 25) + SourceIndex(0)
---
>>>    }
1 >^^^^
2 >    ^
3 >     ^^^^^^^^^->
1 >
  >    
2 >    }
1 >Emitted(55, 5) Source(32, 5) + SourceIndex(0)
2 >Emitted(55, 6) Source(32, 6) + SourceIndex(0)
---
>>>    return D;
1->^^^^
2 >    ^^^^^^^^
1->
  >
2 >    }
1->Emitted(56, 5) Source(33, 1) + SourceIndex(0)
2 >Emitted(56, 13) Source(33, 2) + SourceIndex(0)
---
>>>}(C));
1 >
2 >^
3 > 
4 > ^
5 >  ^
6 >   ^^^
7 >      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^->
1 >
2 >}
3 > 
4 > class D extends 
5 >  C
6 >    {
  >       dProp = () => this;
  >   
  >       constructor(a = 100) {
  >           super(a);
  >   
  >           if (Math.random() < 0.5) {
  >               "You win!"
  >               return {
  >                   cProp: 1,
  >                   dProp: () => this,
  >                   foo() { return "You win!!!!!" }
  >               };
  >           }
  >           else
  >               return null;
  >       }
  >   }
1 >Emitted(57, 1) Source(33, 1) + SourceIndex(0)
2 >Emitted(57, 2) Source(33, 2) + SourceIndex(0)
3 >Emitted(57, 2) Source(16, 1) + SourceIndex(0)
4 >Emitted(57, 3) Source(16, 17) + SourceIndex(0)
5 >Emitted(57, 4) Source(16, 18) + SourceIndex(0)
6 >Emitted(57, 7) Source(33, 2) + SourceIndex(0)
---
>>>//# sourceMappingURL=derivedClassConstructorWithExplicitReturns01.js.map